/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br/>              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.mifos.fineract.models;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * FloatingRatePeriod
 */

public class FloatingRatePeriod {
    @SerializedName("id")
    private Long id = null;

    @SerializedName("fromDate")
    private DateTime fromDate = null;

    @SerializedName("interestRate")
    private BigDecimal interestRate = null;

    @SerializedName("createdBy")
    private AppUser createdBy = null;

    @SerializedName("modifiedBy")
    private AppUser modifiedBy = null;

    @SerializedName("createdOn")
    private DateTime createdOn = null;

    @SerializedName("modifiedOn")
    private DateTime modifiedOn = null;

    @SerializedName("differentialToBaseLendingRate")
    private Boolean differentialToBaseLendingRate = null;

    @SerializedName("floatingRatesId")
    private FloatingRate floatingRatesId = null;

    @SerializedName("active")
    private Boolean active = null;

    @SerializedName("new")
    private Boolean _new = null;

    public FloatingRatePeriod id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @ApiModelProperty(value = "")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public FloatingRatePeriod fromDate(DateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }

    /**
     * Get fromDate
     *
     * @return fromDate
     **/
    @ApiModelProperty(value = "")
    public DateTime getFromDate() {
        return fromDate;
    }

    public void setFromDate(DateTime fromDate) {
        this.fromDate = fromDate;
    }

    public FloatingRatePeriod interestRate(BigDecimal interestRate) {
        this.interestRate = interestRate;
        return this;
    }

    /**
     * Get interestRate
     *
     * @return interestRate
     **/
    @ApiModelProperty(value = "")
    public BigDecimal getInterestRate() {
        return interestRate;
    }

    public void setInterestRate(BigDecimal interestRate) {
        this.interestRate = interestRate;
    }

    public FloatingRatePeriod createdBy(AppUser createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get createdBy
     *
     * @return createdBy
     **/
    @ApiModelProperty(value = "")
    public AppUser getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(AppUser createdBy) {
        this.createdBy = createdBy;
    }

    public FloatingRatePeriod modifiedBy(AppUser modifiedBy) {
        this.modifiedBy = modifiedBy;
        return this;
    }

    /**
     * Get modifiedBy
     *
     * @return modifiedBy
     **/
    @ApiModelProperty(value = "")
    public AppUser getModifiedBy() {
        return modifiedBy;
    }

    public void setModifiedBy(AppUser modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    public FloatingRatePeriod createdOn(DateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Get createdOn
     *
     * @return createdOn
     **/
    @ApiModelProperty(value = "")
    public DateTime getCreatedOn() {
        return createdOn;
    }

    public void setCreatedOn(DateTime createdOn) {
        this.createdOn = createdOn;
    }

    public FloatingRatePeriod modifiedOn(DateTime modifiedOn) {
        this.modifiedOn = modifiedOn;
        return this;
    }

    /**
     * Get modifiedOn
     *
     * @return modifiedOn
     **/
    @ApiModelProperty(value = "")
    public DateTime getModifiedOn() {
        return modifiedOn;
    }

    public void setModifiedOn(DateTime modifiedOn) {
        this.modifiedOn = modifiedOn;
    }

    public FloatingRatePeriod differentialToBaseLendingRate(Boolean differentialToBaseLendingRate) {
        this.differentialToBaseLendingRate = differentialToBaseLendingRate;
        return this;
    }

    /**
     * Get differentialToBaseLendingRate
     *
     * @return differentialToBaseLendingRate
     **/
    @ApiModelProperty(value = "")
    public Boolean isDifferentialToBaseLendingRate() {
        return differentialToBaseLendingRate;
    }

    public void setDifferentialToBaseLendingRate(Boolean differentialToBaseLendingRate) {
        this.differentialToBaseLendingRate = differentialToBaseLendingRate;
    }

    public FloatingRatePeriod floatingRatesId(FloatingRate floatingRatesId) {
        this.floatingRatesId = floatingRatesId;
        return this;
    }

    /**
     * Get floatingRatesId
     *
     * @return floatingRatesId
     **/
    @ApiModelProperty(value = "")
    public FloatingRate getFloatingRatesId() {
        return floatingRatesId;
    }

    public void setFloatingRatesId(FloatingRate floatingRatesId) {
        this.floatingRatesId = floatingRatesId;
    }

    public FloatingRatePeriod active(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Get active
     *
     * @return active
     **/
    @ApiModelProperty(value = "")
    public Boolean isActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public FloatingRatePeriod _new(Boolean _new) {
        this._new = _new;
        return this;
    }

    /**
     * Get _new
     *
     * @return _new
     **/
    @ApiModelProperty(value = "")
    public Boolean isNew() {
        return _new;
    }

    public void setNew(Boolean _new) {
        this._new = _new;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FloatingRatePeriod floatingRatePeriod = (FloatingRatePeriod) o;
        return Objects.equals(this.id, floatingRatePeriod.id) &&
                Objects.equals(this.fromDate, floatingRatePeriod.fromDate) &&
                Objects.equals(this.interestRate, floatingRatePeriod.interestRate) &&
                Objects.equals(this.createdBy, floatingRatePeriod.createdBy) &&
                Objects.equals(this.modifiedBy, floatingRatePeriod.modifiedBy) &&
                Objects.equals(this.createdOn, floatingRatePeriod.createdOn) &&
                Objects.equals(this.modifiedOn, floatingRatePeriod.modifiedOn) &&
                Objects.equals(this.differentialToBaseLendingRate, floatingRatePeriod.differentialToBaseLendingRate) &&
                Objects.equals(this.floatingRatesId, floatingRatePeriod.floatingRatesId) &&
                Objects.equals(this.active, floatingRatePeriod.active) &&
                Objects.equals(this._new, floatingRatePeriod._new);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, fromDate, interestRate, createdBy, modifiedBy, createdOn, modifiedOn, differentialToBaseLendingRate, floatingRatesId, active, _new);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FloatingRatePeriod {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
        sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
        sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
        sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
        sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
        sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
        sb.append("    differentialToBaseLendingRate: ").append(toIndentedString(differentialToBaseLendingRate)).append("\n");
        sb.append("    floatingRatesId: ").append(toIndentedString(floatingRatesId)).append("\n");
        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

