/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br/>              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.mifos.fineract.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * InteropIdentifierRequestData
 */

public class InteropIdentifierRequestData {
    @SerializedName("idType")
    private IdTypeEnum idType = null;
    @SerializedName("idValue")
    private String idValue = null;
    @SerializedName("subIdOrType")
    private String subIdOrType = null;
    @SerializedName("accountId")
    private String accountId = null;

    public InteropIdentifierRequestData idType(IdTypeEnum idType) {
        this.idType = idType;
        return this;
    }

    /**
     * Get idType
     *
     * @return idType
     **/
    @ApiModelProperty(value = "")
    public IdTypeEnum getIdType() {
        return idType;
    }

    public void setIdType(IdTypeEnum idType) {
        this.idType = idType;
    }

    public InteropIdentifierRequestData idValue(String idValue) {
        this.idValue = idValue;
        return this;
    }

    /**
     * Get idValue
     *
     * @return idValue
     **/
    @ApiModelProperty(value = "")
    public String getIdValue() {
        return idValue;
    }

    public void setIdValue(String idValue) {
        this.idValue = idValue;
    }

    public InteropIdentifierRequestData subIdOrType(String subIdOrType) {
        this.subIdOrType = subIdOrType;
        return this;
    }

    /**
     * Get subIdOrType
     *
     * @return subIdOrType
     **/
    @ApiModelProperty(value = "")
    public String getSubIdOrType() {
        return subIdOrType;
    }

    public void setSubIdOrType(String subIdOrType) {
        this.subIdOrType = subIdOrType;
    }

    public InteropIdentifierRequestData accountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * Get accountId
     *
     * @return accountId
     **/
    @ApiModelProperty(value = "")
    public String getAccountId() {
        return accountId;
    }

    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InteropIdentifierRequestData interopIdentifierRequestData = (InteropIdentifierRequestData) o;
        return Objects.equals(this.idType, interopIdentifierRequestData.idType) &&
                Objects.equals(this.idValue, interopIdentifierRequestData.idValue) &&
                Objects.equals(this.subIdOrType, interopIdentifierRequestData.subIdOrType) &&
                Objects.equals(this.accountId, interopIdentifierRequestData.accountId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(idType, idValue, subIdOrType, accountId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InteropIdentifierRequestData {\n");

        sb.append("    idType: ").append(toIndentedString(idType)).append("\n");
        sb.append("    idValue: ").append(toIndentedString(idValue)).append("\n");
        sb.append("    subIdOrType: ").append(toIndentedString(subIdOrType)).append("\n");
        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets idType
     */
    @JsonAdapter(IdTypeEnum.Adapter.class)
    public enum IdTypeEnum {
        MSISDN("MSISDN"),

        EMAIL("EMAIL"),

        PERSONAL_ID("PERSONAL_ID"),

        BUSINESS("BUSINESS"),

        DEVICE("DEVICE"),

        ACCOUNT_ID("ACCOUNT_ID"),

        IBAN("IBAN"),

        ALIAS("ALIAS");

        private String value;

        IdTypeEnum(String value) {
            this.value = value;
        }

        public static IdTypeEnum fromValue(String text) {
            for (IdTypeEnum b : IdTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<IdTypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final IdTypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public IdTypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return IdTypeEnum.fromValue(String.valueOf(value));
            }
        }
    }

}

